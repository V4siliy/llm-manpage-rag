# Generated by Django 5.2.6 on 2025-09-17 07:00

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('search', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.TextField(help_text='The evaluation query text')),
                ('expected_substrings', models.JSONField(help_text='List of expected substrings that should be found')),
                ('document_id', models.CharField(help_text='Target document ID from eval data', max_length=200)),
                ('target_section', models.CharField(help_text='Target section name', max_length=100)),
                ('target_anchor', models.CharField(help_text='Target anchor identifier', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['document_id'], name='search_eval_documen_cdde27_idx'), models.Index(fields=['target_section'], name='search_eval_target__64df3f_idx'), models.Index(fields=['created_at'], name='search_eval_created_b009cd_idx')],
            },
        ),
        migrations.CreateModel(
            name='EvaluationRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name/description of this evaluation run', max_length=200)),
                ('search_type', models.CharField(default='vector', help_text='Type of search used', max_length=50)),
                ('score_threshold', models.FloatField(default=0.7, help_text='Score threshold used for search')),
                ('limit', models.PositiveIntegerField(default=20, help_text='Maximum number of results returned')),
                ('embedding_model', models.CharField(help_text='Embedding model used', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='running', max_length=20)),
                ('recall_at_1', models.FloatField(blank=True, null=True)),
                ('recall_at_5', models.FloatField(blank=True, null=True)),
                ('recall_at_10', models.FloatField(blank=True, null=True)),
                ('recall_at_20', models.FloatField(blank=True, null=True)),
                ('ndcg_at_1', models.FloatField(blank=True, null=True)),
                ('ndcg_at_5', models.FloatField(blank=True, null=True)),
                ('ndcg_at_10', models.FloatField(blank=True, null=True)),
                ('ndcg_at_20', models.FloatField(blank=True, null=True)),
                ('mrr', models.FloatField(blank=True, null=True)),
                ('total_queries', models.PositiveIntegerField(default=0)),
                ('successful_queries', models.PositiveIntegerField(default=0)),
                ('failed_queries', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status'], name='search_eval_status_9ce49f_idx'), models.Index(fields=['created_at'], name='search_eval_created_b208ba_idx'), models.Index(fields=['search_type'], name='search_eval_search__765fd9_idx')],
            },
        ),
        migrations.CreateModel(
            name='EvaluationResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('retrieved_chunks', models.JSONField(help_text='List of retrieved chunk IDs with scores')),
                ('target_chunk_found', models.BooleanField(default=False)),
                ('target_chunk_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('target_chunk_score', models.FloatField(blank=True, null=True)),
                ('recall_at_1', models.FloatField(blank=True, null=True)),
                ('recall_at_5', models.FloatField(blank=True, null=True)),
                ('recall_at_10', models.FloatField(blank=True, null=True)),
                ('recall_at_20', models.FloatField(blank=True, null=True)),
                ('ndcg_at_1', models.FloatField(blank=True, null=True)),
                ('ndcg_at_5', models.FloatField(blank=True, null=True)),
                ('ndcg_at_10', models.FloatField(blank=True, null=True)),
                ('ndcg_at_20', models.FloatField(blank=True, null=True)),
                ('mrr', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if evaluation failed')),
                ('success', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='search.evaluationquery')),
                ('evaluation_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='search.evaluationrun')),
            ],
            options={
                'indexes': [models.Index(fields=['evaluation_run', 'query'], name='search_eval_evaluat_a63dbf_idx'), models.Index(fields=['target_chunk_found'], name='search_eval_target__c971b5_idx'), models.Index(fields=['success'], name='search_eval_success_cd69d7_idx')],
                'unique_together': {('evaluation_run', 'query')},
            },
        ),
    ]
